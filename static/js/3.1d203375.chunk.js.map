{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","components/PersonPage/PersonFilms/PersonFilms.tsx"],"names":["module","exports","PersonFilms","films","React","useState","filmsName","setFilmsName","useEffect","a","filmsHTTPS","map","url","changeHTTP","makeConcurrentRequest","response","className","styles","wrapper","list__containter","sort","z","episode_id","title","list__item","item__episode","item__colon","item__title"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,iBAAmB,sCAAsC,WAAa,gCAAgC,cAAgB,mCAAmC,YAAc,iCAAiC,YAAc,mC,kKCsChQC,EA5BiC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClD,EAAkCC,IAAMC,SAAqB,IAA7D,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAH,IAAMI,WAAU,WACf,sBAAC,8BAAAC,EAAA,6DACMC,EAAaP,EAAMQ,KAAI,SAACC,GAAD,OAASC,YAAWD,MADjD,SAEuBE,YAAsBJ,GAF7C,OAEMK,EAFN,OAGAR,EAAaQ,GAHb,0CAAD,KAKE,IAGF,qBAAKC,UAAWC,IAAOC,QAAvB,SACC,oBAAIF,UAAWC,IAAOE,iBAAtB,SACEb,EACCc,MAAK,SAACX,EAAGY,GAAJ,OAAUZ,EAAEa,WAAaD,EAAEC,cAChCX,KAAI,gBAAGY,EAAH,EAAGA,MAAOD,EAAV,EAAUA,WAAV,OACJ,qBAAIN,UAAWC,IAAOO,WAAtB,UACC,uBAAMR,UAAWC,IAAOQ,cAAxB,qBAAgDH,KAChD,sBAAMN,UAAWC,IAAOS,YAAxB,iBACA,sBAAMV,UAAWC,IAAOU,YAAxB,SAAsCJ,MAHAD","file":"static/js/3.1d203375.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__E_sSa\",\"list__containter\":\"PersonFilms_list__containter__1XW41\",\"list__item\":\"PersonFilms_list__item__1yuIJ\",\"item__episode\":\"PersonFilms_item__episode__1U9qN\",\"item__colon\":\"PersonFilms_item__colon__lSKlB\",\"item__title\":\"PersonFilms_item__title__1Bbs1\"};","import React from 'react';\r\n\r\nimport { FilmType, IPersonResponse } from '@store/types';\r\nimport { makeConcurrentRequest, changeHTTP } from '@utils/network';\r\n\r\nimport styles from './PersonFilms.module.css';\r\n\r\ninterface PersonFilmsProps {\r\n\tfilms: IPersonResponse['films'];\r\n}\r\n\r\nconst PersonFilms: React.FC<PersonFilmsProps> = ({ films }) => {\r\n\tconst [filmsName, setFilmsName] = React.useState<FilmType[]>([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tconst filmsHTTPS = films.map((url) => changeHTTP(url)) as string[];\r\n\t\t\tconst response = await makeConcurrentRequest(filmsHTTPS);\r\n\t\t\tsetFilmsName(response as FilmType[]);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<ul className={styles.list__containter}>\r\n\t\t\t\t{filmsName\r\n\t\t\t\t\t.sort((a, z) => a.episode_id - z.episode_id)\r\n\t\t\t\t\t.map(({ title, episode_id }) => (\r\n\t\t\t\t\t\t<li className={styles.list__item} key={episode_id}>\r\n\t\t\t\t\t\t\t<span className={styles.item__episode}>Episode {episode_id}</span>\r\n\t\t\t\t\t\t\t<span className={styles.item__colon}> : </span>\r\n\t\t\t\t\t\t\t<span className={styles.item__title}>{title}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PersonFilms;\r\n"],"sourceRoot":""}